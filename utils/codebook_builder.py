import math

CODEBOOK_DICT = {7: {0: (0., 0., 0.),
                     1: (-1., 0., 0.),
                     2: (0., -1., 0.),
                     3: (1., 0., 0.),
                     4: (0., 1., 0.),
                     5: (0., 0., 1.),
                     6: (0., 0., -1)},
                 15: {0: (0., 0., 0.),
                      1: (-1., 0., 0.),
                      2: (0., -1., 0.),
                      3: (1., 0., 0.),
                      4: (0., 1., 0.),
                      5: (0., 0., 1.),
                      6: (0., 0., -1),
                      7: (-0.5773502691896257, 0.5773502691896258, -0.5773502691896257),
                      8: (-0.5773502691896258, -0.5773502691896257, -0.5773502691896257),
                      9: (0.5773502691896256, -0.5773502691896258, -0.5773502691896257),
                      10: (0.5773502691896258, 0.5773502691896257, -0.5773502691896257),
                      11: (-0.5773502691896257, 0.5773502691896258, 0.5773502691896257),
                      12: (-0.5773502691896258, -0.5773502691896257, 0.5773502691896257),
                      13: (0.5773502691896256, -0.5773502691896258, 0.5773502691896257),
                      14: (0.5773502691896258, 0.5773502691896257, 0.5773502691896257)},
                 27: {0: (0., 0., 0.),
                      1: (-1., 0., 0.),
                      2: (0., -1., 0.),
                      3: (1., 0., 0.),
                      4: (0., 1., 0.),
                      5: (0., 0., 1.),
                      6: (0., 0., -1),
                      7: (-0.5773502691896257, 0.5773502691896258, -0.5773502691896257),
                      8: (-0.5773502691896258, -0.5773502691896257, -0.5773502691896257),
                      9: (0.5773502691896256, -0.5773502691896258, -0.5773502691896257),
                      10: (0.5773502691896258, 0.5773502691896257, -0.5773502691896257),
                      11: (-0.5773502691896257, 0.5773502691896258, 0.5773502691896257),
                      12: (-0.5773502691896258, -0.5773502691896257, 0.5773502691896257),
                      13: (0.5773502691896256, -0.5773502691896258, 0.5773502691896257),
                      14: (0.5773502691896258, 0.5773502691896257, 0.5773502691896257),
                      15: (-0.7071067811865475, 0.0, -0.7071067811865476),
                      16: (0.0, -0.7071067811865476, -0.7071067811865476),
                      17: (0.7071067811865475, 0.0, -0.7071067811865476),
                      18: (0.0, 0.7071067811865475, -0.7071067811865476),
                      19: (-0.7071067811865475, -0.7071067811865475, 0.0),
                      20: (0.7071067811865475, -0.7071067811865475, 0.0),
                      21: (0.7071067811865475, 0.7071067811865475, 0.0),
                      22: (-0.7071067811865475, 0.7071067811865475, 0.0),
                      23: (-0.7071067811865475, 0.0, 0.7071067811865476),
                      24: (0.0, 0.7071067811865476, 0.7071067811865476),
                      25: (0.7071067811865475, 0.0, 0.7071067811865476),
                      26: (0.0, -0.7071067811865475, 0.7071067811865476)}}


def create_3d_codebook(num, plot=False):
    builder = CODEBOOK_DICT[num]
    codebook = {k: builder[k] for k in builder.keys()}
    return codebook


def code_vector(codebook, v):
    distances = {k: eucl_dist(codebook.get(k), v) for k in codebook.keys()}
    return min(distances, key=distances.get)


def eucl_dist(v1, v2):
    dist = [(a - b) ** 2 for a, b in zip(v1, v2)]
    distance = math.sqrt(sum(dist))
    return distance
